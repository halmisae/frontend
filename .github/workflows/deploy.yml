name: CI/CD 배포

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: 의존성 설치 및 빌드
        run: |
          npm ci
          npm run build --if-present
          npm run test

      - name: AWS 자격 증명 구성
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: EC2에 배포
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script_stop: true
          script: |
            # 애플리케이션이 위치한 디렉터리 확인 및 생성
            if [ ! -d /home/ubuntu/my-app ]; then
              mkdir -p /home/ubuntu/my-app
            fi

            # 애플리케이션이 위치한 디렉터리로 이동
            cd /home/ubuntu/my-app

            # 최신 코드 가져오기
            git pull origin main

            # 의존성 설치 및 빌드
            npm ci
            npm run build --if-present
            npm run test

            # 빌드 결과물 디렉터리로 이동
            cd build

            # 기존 웹 서버 파일 제거
            sudo rm -rf /var/www/html/*

            # 빌드 결과물 복사
            sudo cp -r * /var/www/html/

            # 웹 서버 재시작 (Nginx를 예로 들면)
            sudo systemctl restart nginx
